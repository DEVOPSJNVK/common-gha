name: "Testing reviewer PR"
description: "Posting slack message for PR Review"
inputs:
  channel_id:
    description: "Channel ID of the slack group"
    required: true

  SLACK_BOT_TOKEN:
    description: "Bot token"

runs:
  using: "composite"
  steps:
  - name: Get Requested Reviewers
    shell: bash
    run: |
      # echo "Requested Reviewers:"
      # for reviewer in (${{ toJSON(github.event.pull_request.requested_reviewers) }} | jq -c '.[]'); do
      #   echo "Reviewer Login: $(echo $reviewer | jq -r '.login')"
      #   echo "Reviewer Profile: $(echo $reviewer | jq -r '.html_url')"
      # done
      reviewers_json=${{ toJSON(github.event.pull_request.requested_reviewers) }}
      echo "$reviewers_json" | jq -c '.[]' | while read -r reviewer; do
      login=$(echo "$reviewer" | jq -r '.login')
      profile_url=$(echo "$reviewer" | jq -r '.html_url')
      echo "Reviewer Login: $login"
      echo "Reviewer Profile: $profile_url"
      done

  - name: Posting to slack
    id: slack
    uses: slackapi/slack-github-action@v1.27.0
    with:
      channel-id: '${{ inputs.channel_id }}'
      payload: |
        {
          "text": "GithubAction通知",
          "blocks": [
            {
              "type": "section",
              "text": { "type": "mrkdwn", "text": "<@U07KDEU0DB7>" }
            },
            {
              "type": "header",
              "text": { "type": "plain_text", "text": "PRレビューリクエスト" }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "<${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>"
              }
            },
            {
              "type": "section",
              "fields": [
                { "type": "mrkdwn", "text": "*Author:*" },
                { "type": "mrkdwn", "text": "${{ github.actor }}" },
                { "type": "mrkdwn", "text": "*Basebranch:*" },
                { "type": "mrkdwn", "text": "${{ github.event.pull_request.base.ref }}" },
                { "type": "mrkdwn", "text": "*Headbranch:*" },
                {
                  "type": "mrkdwn",
                  "text": "${{ github.event.pull_request.head.ref }}"
                }
              ]
            }
          ]
        }
    env:
      SLACK_BOT_TOKEN: ${{ inputs.SLACK_BOT_TOKEN }}