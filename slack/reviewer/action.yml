name: "Testing reviewer PR"
description: "Posting slack message for PR Review"
inputs:
  channel_id:
    description: "Channel ID of the slack group"
    required: true

  SLACK_BOT_TOKEN:
    description: "Bot token"

runs:
  using: "composite"
  steps:
  - name: Get Requested Reviewers
    shell: bash
    run: |
      # Set the Slack API token (stored in GitHub secrets for security)
      SLACK_API_TOKEN="${{ inputs.SLACK_BOT_TOKEN }}"
      
      # Initialize an empty string to hold the Slack user IDs
      slack_user_ids=""

      reviewers='${{ toJSON(github.event.pull_request.requested_reviewers) }}'
      echo "$reviewers" | jq -c '.[]' | while read -r reviewer; do
        login=$(echo "$reviewer" | jq -r '.login')
        echo "Fetching email for reviewer: $login"

        # Fetch the GitHub user's email
        email=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/users/$login" | jq -r '.email')
        
        if [ "$email" != "null" ]; then
          echo "Reviewer Email: $email"

          # Fetch Slack user ID by email
          slack_user_id=$(curl -s -X POST \
            -H "Authorization: Bearer $SLACK_API_TOKEN" \
            -H "Content-Type: application/json" \
            --data "{\"email\":\"$email\"}" \
            "https://slack.com/api/users.lookupByEmail" | jq -r '.user.id')

          if [ "$slack_user_id" != "null" ]; then
            echo "Slack User ID: $slack_user_id"
            # Prepend '@' and append the Slack user ID to the list
            slack_user_ids="${slack_user_ids}@${slack_user_id} "
          else
            echo "Slack User ID: Not found"
          fi
        else
          echo "Reviewer Email: Not available"
          echo "Slack User ID: Cannot be retrieved without email"
        fi
      done

      # Trim trailing whitespace and output the final list of Slack user IDs with @
      slack_user_ids=$(echo "$slack_user_ids" | xargs)
      echo "Final Slack User IDs: $slack_user_ids"

      echo "SLACK_USER_IDS=$slack_user_ids" >> $GITHUB_ENV

  - name: Posting to slack
    id: slack
    uses: slackapi/slack-github-action@v1.27.0
    with:
      channel-id: '${{ inputs.channel_id }}'
      payload: |
        {
          "text": "GithubAction通知",
          "blocks": [
            {
              "type": "section",
              "text": { "type": "mrkdwn", "text": "<${{env.SLACK_USER_IDS}}>" }
            },
            {
              "type": "header",
              "text": { "type": "plain_text", "text": "PRレビューリクエスト" }
            },
            {
              "type": "section",
              "text": {
                "type": "mrkdwn",
                "text": "<${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }}>"
              }
            },
            {
              "type": "section",
              "fields": [
                { "type": "mrkdwn", "text": "*Author:*" },
                { "type": "mrkdwn", "text": "${{ github.actor }}" },
                { "type": "mrkdwn", "text": "*Basebranch:*" },
                { "type": "mrkdwn", "text": "${{ github.event.pull_request.base.ref }}" },
                { "type": "mrkdwn", "text": "*Headbranch:*" },
                {
                  "type": "mrkdwn",
                  "text": "${{ github.event.pull_request.head.ref }}"
                }
              ]
            }
          ]
        }
    env:
      SLACK_BOT_TOKEN: ${{ inputs.SLACK_BOT_TOKEN }}